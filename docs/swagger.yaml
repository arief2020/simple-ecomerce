basePath: /api/v1
definitions:
  dto.AlamatResp:
    description: Data that will be returned in the response
    properties:
      detail_alamat:
        example: Jl. Contoh No. 123
        type: string
      id:
        type: integer
      judul_alamat:
        example: Alamat Rumah
        type: string
      nama_penerima:
        example: Budi
        type: string
      no_telp:
        example: "08123456789"
        type: string
    required:
    - detail_alamat
    - judul_alamat
    - nama_penerima
    - no_telp
    type: object
  dto.CityResp:
    description: Data kota yang terkait dengan user
    properties:
      id:
        example: "1"
        type: string
      name:
        example: Bandung
        type: string
      province_id:
        example: "1"
        type: string
    type: object
  dto.CreateUser:
    properties:
      email:
        type: string
      id_kota:
        type: string
      id_provinsi:
        type: string
      jenis_kelamin:
        type: string
      kata_sandi:
        type: string
      name:
        type: string
      no_telp:
        type: string
      pekerjaan:
        type: string
      tanggal_lahir:
        type: string
      tentang:
        type: string
    required:
    - email
    - id_kota
    - id_provinsi
    - jenis_kelamin
    - kata_sandi
    - name
    - no_telp
    - pekerjaan
    - tanggal_lahir
    - tentang
    type: object
  dto.InserAlamatReq:
    description: Data that will be used to insert a new address
    properties:
      detail_alamat:
        example: Jl. Contoh No. 123
        type: string
      judul_alamat:
        example: Alamat Rumah
        type: string
      nama_penerima:
        example: Budi
        type: string
      no_telp:
        example: "08123456789"
        type: string
    required:
    - detail_alamat
    - judul_alamat
    - nama_penerima
    - no_telp
    type: object
  dto.Login:
    properties:
      kata_sandi:
        type: string
      no_telp:
        type: string
    required:
    - kata_sandi
    - no_telp
    type: object
  dto.LoginRes:
    description: Data yang dikembalikan setelah user berhasil login
    properties:
      email:
        example: L2DQK@example.com
        type: string
      id_kota:
        $ref: '#/definitions/dto.CityResp'
      id_provinsi:
        $ref: '#/definitions/dto.ProvinceResp'
      nama:
        example: John Doe
        type: string
      no_telp:
        example: "1234567890"
        type: string
      pekerjaan:
        example: Software Engineer
        type: string
      tanggal_lahir:
        example: "1990-01-01"
        type: string
      tentang:
        example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  dto.ProvinceResp:
    description: Data provinsi yang terkait dengan user
    properties:
      id:
        example: "1"
        type: string
      name:
        example: Jawa Barat
        type: string
    type: object
  dto.UpdateAlamatReq:
    description: Data that will be used to update an address
    properties:
      detail_alamat:
        example: Jl. Contoh No. 123
        type: string
      nama_penerima:
        example: Budi
        type: string
      no_telp:
        example: "08123456789"
        type: string
    required:
    - detail_alamat
    - nama_penerima
    - no_telp
    type: object
  dto.UpdateUser:
    properties:
      email:
        type: string
      id_kota:
        type: string
      id_provinsi:
        type: string
      jenis_kelamin:
        type: string
      nama:
        type: string
      no_telp:
        type: string
      pekerjaan:
        type: string
      tanggal_lahir:
        type: string
      tentang:
        type: string
    required:
    - email
    - id_kota
    - id_provinsi
    - jenis_kelamin
    - nama
    - no_telp
    - pekerjaan
    - tanggal_lahir
    - tentang
    type: object
  dto.UserResp:
    properties:
      email:
        type: string
      id_kota:
        $ref: '#/definitions/dto.CityResp'
      id_provinsi:
        $ref: '#/definitions/dto.ProvinceResp'
      is_admin:
        type: boolean
      nama:
        type: string
      no_telp:
        type: string
      pekerjaan:
        type: string
      tanggal_lahir:
        type: string
      tentang:
        type: string
    type: object
  helper.Response:
    properties:
      data: {}
      errors:
        items: {}
        type: array
      message:
        type: string
      status:
        type: boolean
    type: object
host: localhost:8000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: Golang GoFiber swagger auto generate step by step by swaggo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoFiber Example API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Endpoint untuk login user dan mengembalikan data user beserta token
      parameters:
      - description: Login User
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to POST data
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginRes'
              type: object
      summary: Login User
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Endpoint untuk register user
      parameters:
      - description: Register User
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Berhasil login, mengembalikan data user
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register User
      tags:
      - Auth
  /user:
    get:
      consumes:
      - application/json
      description: Endpoint for get my profile
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to get my profile
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResp'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get My Profile
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Endpoint for get my profile
      parameters:
      - description: Update My Profile
        in: body
        name: update-profile
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to update my profile
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update My Profile
      tags:
      - User
  /user/alamat:
    get:
      consumes:
      - application/json
      description: Endpoint for get all my address
      parameters:
      - description: Judul Alamat
        in: query
        name: judul_alamat
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to get all my address
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AlamatResp'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get My Alamat
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Endpoint for create new address
      parameters:
      - description: Success to create new address
        in: body
        name: update-profile
        required: true
        schema:
          $ref: '#/definitions/dto.InserAlamatReq'
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to create new address
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: integer
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create My New Alamat
      tags:
      - User
  /user/alamat/{id}:
    delete:
      consumes:
      - application/json
      description: Endpoint for delete address by id
      parameters:
      - description: ID of the address
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to update address by id
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete My Alamat By ID
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Endpoint for get address by id
      parameters:
      - description: ID of the address
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to get address by id
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AlamatResp'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get My Alamat By ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Endpoint for get address by id
      parameters:
      - description: ID of the address
        in: path
        name: id
        required: true
        type: integer
      - description: Success to update address
        in: body
        name: update-alamat
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAlamatReq'
      produces:
      - application/json
      responses:
        "200":
          description: Succeed to update address by id
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AlamatResp'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get My Alamat By ID
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
